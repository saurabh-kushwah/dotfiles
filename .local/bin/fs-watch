#!/bin/bash

ENVS=()
WATCH_FILES=()
RUN_COMMAND=""

PANE_ID=""
WINDOW_ID=""

while [[ $# -gt 0 ]]; do
  case $1 in
    -e|--env)
      ENVS+=("-e $2")
      shift
      shift
      ;;
    -f|--file)
      WATCH_FILES+=("$2")
      shift
      shift
      ;;
    -p|--pane-id)
      PANE_ID=("$2")
      shift
      shift
      ;;
    -w|--window-id)
      WINDOW_ID=("$2")
      shift
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      WATCH_FILES+=("$1")
      shift
      ;;
  esac
done

RUN_COMMAND=$(echo "${@}" | xargs)

if [ ! -z "${WINDOW_ID}" ]; then
  PANE_ID=$(tmux list-panes -t ${WINDOW_ID} -F '#{pane_id}')
fi

if (( ${#WATCH_FILES[@]} == 0 )) || [[ -z "${RUN_COMMAND}" ]]; then
  echo "Usage: fs-watch [file ...] -- command"
  exit
fi

if [ -z "$PANE_ID" ]; then
  PANE_ID="${TMUX_PANE}"
else

  for ENV in "${ENVS[@]}"; do
    tmux send-keys -t ${PANE_ID} "export ${ENV//-e /}" Enter
  done

  tmux send-keys -t ${PANE_ID} clear Enter
fi

REFRESH_COMMAND=$"
while inotifywait -r -qqe close_write '${WATCH_FILES[@]}'; do
  tmux send-keys -t ${PANE_ID} C-c Enter clear Enter '${RUN_COMMAND}' Enter
done
"

bash -c "${REFRESH_COMMAND}" &
REFRESH_PID="$!"

CLEANUP_COMMAND=$"
function cleanup() {
  pkill --parent ${REFRESH_PID}
}

trap cleanup exit
"

tmux send-keys -t ${PANE_ID} C-c Enter "${CLEANUP_COMMAND}" Enter clear Enter
