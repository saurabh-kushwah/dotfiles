#!/usr/bin/env python3

import os
import sys
import fzf
import yaml
import argparse

"""
-
  name: John Doe
  user: john.doe
  host: john-doe.com
  password: john-doe
  command: py-cmd
  identity: path/to/identity/file
"""

parser = argparse.ArgumentParser(description='ssh helper')

parser.add_argument('-r', '--root', action='store_true')
parser.add_argument('-t', '--tmux', action='store_true')
parser.add_argument("command", nargs="*", help="command to execute on remote host")

args = parser.parse_args()

# os.path.expanduser("~")
home_dir = "/home/saurabh"
ssh_dir  = f"{home_dir}/.ssh"
ssh_cfg  = {}

exec_command = ' '.join(args.command) + ' '

if not exec_command.strip():
    exec_command = 'bash --login'

with open(f'{home_dir}/.ssh/hosts.yaml', 'r') as file:
    config = yaml.safe_load(file)

prompt_list = []

for cfg in config:
    name, user, host = cfg["name"], cfg["user"], cfg["host"]
    prompt_list.append(f"""{name:<20} => {user}@{host}""")
    ssh_cfg[cfg["name"]] = cfg

resp = fzf.prompt(prompt_list, multi=True, opts=['--height=100%'])

def exec_ssh(cfg):
    prefix, identity = '', ''
    name, user, host = cfg["name"], cfg["user"], cfg["host"]

    if password := cfg.get('password'):
        prefix=f"sshpass -p '{password}' "

    if args.tmux:
        prefix=f"tmux new-window -a -n '{name}' {prefix}"

    if args.root:
        user = 'root'

    init_command = [
        'export TERM=xterm-256color'
    ]

    command = ';'.join(init_command) + "; " + exec_command
    command = command.strip()

    print(f"running command '{command}' on {name} ({user}@{host})", file=sys.stderr)

    if identity_file := cfg.get('identity'):
        identity = f"-i {ssh_dir}/{identity_file}"

    os.system(f"{prefix} ssh -o LogLevel=QUIET {identity} {user}@{host} -t '{command}'".strip())

for item in resp:
    host = item.split("=>")[0].strip()
    exec_ssh(ssh_cfg[host])
